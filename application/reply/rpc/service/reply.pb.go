// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: reply.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplyPublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyUserId   int64                  `protobuf:"varint,1,opt,name=replyUserId,proto3" json:"replyUserId,omitempty"`
	TargetId      int64                  `protobuf:"varint,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	ParentId      int64                  `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	RootReplyId   int64                  `protobuf:"varint,4,opt,name=rootReplyId,proto3" json:"rootReplyId,omitempty"`
	BeReplyUserId int64                  `protobuf:"varint,5,opt,name=beReplyUserId,proto3" json:"beReplyUserId,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyPublishRequest) Reset() {
	*x = ReplyPublishRequest{}
	mi := &file_reply_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyPublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyPublishRequest) ProtoMessage() {}

func (x *ReplyPublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyPublishRequest.ProtoReflect.Descriptor instead.
func (*ReplyPublishRequest) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{0}
}

func (x *ReplyPublishRequest) GetReplyUserId() int64 {
	if x != nil {
		return x.ReplyUserId
	}
	return 0
}

func (x *ReplyPublishRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ReplyPublishRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ReplyPublishRequest) GetRootReplyId() int64 {
	if x != nil {
		return x.RootReplyId
	}
	return 0
}

func (x *ReplyPublishRequest) GetBeReplyUserId() int64 {
	if x != nil {
		return x.BeReplyUserId
	}
	return 0
}

func (x *ReplyPublishRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ReplyPublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       int64                  `protobuf:"varint,1,opt,name=replyId,proto3" json:"replyId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyPublishResponse) Reset() {
	*x = ReplyPublishResponse{}
	mi := &file_reply_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyPublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyPublishResponse) ProtoMessage() {}

func (x *ReplyPublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyPublishResponse.ProtoReflect.Descriptor instead.
func (*ReplyPublishResponse) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{1}
}

func (x *ReplyPublishResponse) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type ReplyDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyUserId   int64                  `protobuf:"varint,1,opt,name=replyUserId,proto3" json:"replyUserId,omitempty"`
	TargetId      int64                  `protobuf:"varint,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	ParentId      int64                  `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId,omitempty"`
	ReplyId       int64                  `protobuf:"varint,4,opt,name=replyId,proto3" json:"replyId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyDeleteRequest) Reset() {
	*x = ReplyDeleteRequest{}
	mi := &file_reply_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyDeleteRequest) ProtoMessage() {}

func (x *ReplyDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyDeleteRequest.ProtoReflect.Descriptor instead.
func (*ReplyDeleteRequest) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{2}
}

func (x *ReplyDeleteRequest) GetReplyUserId() int64 {
	if x != nil {
		return x.ReplyUserId
	}
	return 0
}

func (x *ReplyDeleteRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ReplyDeleteRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ReplyDeleteRequest) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type ReplyDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyDeleteResponse) Reset() {
	*x = ReplyDeleteResponse{}
	mi := &file_reply_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyDeleteResponse) ProtoMessage() {}

func (x *ReplyDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyDeleteResponse.ProtoReflect.Descriptor instead.
func (*ReplyDeleteResponse) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{3}
}

type RepliesRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	TargetId int64                  `protobuf:"varint,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	ParentId int64                  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Cursor   int64                  `protobuf:"varint,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	PageSize int64                  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SortType int32                  `protobuf:"varint,5,opt,name=sortType,proto3" json:"sortType,omitempty"`
	// 用于和cursor一起区分到哪一页了的
	ReplyId       int64 `protobuf:"varint,6,opt,name=replyId,proto3" json:"replyId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepliesRequest) Reset() {
	*x = RepliesRequest{}
	mi := &file_reply_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepliesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepliesRequest) ProtoMessage() {}

func (x *RepliesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepliesRequest.ProtoReflect.Descriptor instead.
func (*RepliesRequest) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{4}
}

func (x *RepliesRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *RepliesRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *RepliesRequest) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *RepliesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RepliesRequest) GetSortType() int32 {
	if x != nil {
		return x.SortType
	}
	return 0
}

func (x *RepliesRequest) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type ReplyItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ReplyUserId   int64                  `protobuf:"varint,2,opt,name=replyUserId,proto3" json:"replyUserId,omitempty"`
	BeReplyUserId int64                  `protobuf:"varint,3,opt,name=beReplyUserId,proto3" json:"beReplyUserId,omitempty"`       //用于二级评论展示在回复谁
	ParentId      int64                  `protobuf:"varint,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` //拥有查看一级评论的二级评论能在最上面看到一级评论
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	LikeCount     int64                  `protobuf:"varint,6,opt,name=likeCount,proto3" json:"likeCount,omitempty"`
	CreateTime    int64                  `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyItem) Reset() {
	*x = ReplyItem{}
	mi := &file_reply_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyItem) ProtoMessage() {}

func (x *ReplyItem) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyItem.ProtoReflect.Descriptor instead.
func (*ReplyItem) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{5}
}

func (x *ReplyItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReplyItem) GetReplyUserId() int64 {
	if x != nil {
		return x.ReplyUserId
	}
	return 0
}

func (x *ReplyItem) GetBeReplyUserId() int64 {
	if x != nil {
		return x.BeReplyUserId
	}
	return 0
}

func (x *ReplyItem) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ReplyItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyItem) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *ReplyItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type RepliesResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Replies []*ReplyItem           `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	IsEnd   bool                   `protobuf:"varint,2,opt,name=isEnd,proto3" json:"isEnd,omitempty"`
	Cursor  int64                  `protobuf:"varint,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 用于和cursor一起区分到哪一页了的
	ReplyId       int64 `protobuf:"varint,4,opt,name=replyId,proto3" json:"replyId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepliesResponse) Reset() {
	*x = RepliesResponse{}
	mi := &file_reply_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepliesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepliesResponse) ProtoMessage() {}

func (x *RepliesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepliesResponse.ProtoReflect.Descriptor instead.
func (*RepliesResponse) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{6}
}

func (x *RepliesResponse) GetReplies() []*ReplyItem {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *RepliesResponse) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *RepliesResponse) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *RepliesResponse) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type GetReplyThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         string                 `protobuf:"bytes,1,opt,name=bizId,proto3" json:"bizId,omitempty"`              // 业务类型（如 "article"）
	RootReplyId   int64                  `protobuf:"varint,2,opt,name=rootReplyId,proto3" json:"rootReplyId,omitempty"` // 要查看的对话根评论 ID
	Cursor        int64                  `protobuf:"varint,3,opt,name=cursor,proto3" json:"cursor,omitempty"`           // 分页游标
	PageSize      int64                  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`       // 每页数量
	ReplyId       int64                  `protobuf:"varint,5,opt,name=replyId,proto3" json:"replyId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplyThreadRequest) Reset() {
	*x = GetReplyThreadRequest{}
	mi := &file_reply_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplyThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplyThreadRequest) ProtoMessage() {}

func (x *GetReplyThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplyThreadRequest.ProtoReflect.Descriptor instead.
func (*GetReplyThreadRequest) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{7}
}

func (x *GetReplyThreadRequest) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *GetReplyThreadRequest) GetRootReplyId() int64 {
	if x != nil {
		return x.RootReplyId
	}
	return 0
}

func (x *GetReplyThreadRequest) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *GetReplyThreadRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetReplyThreadRequest) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type GetReplyThreadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Replies       []*ReplyItem           `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"` // 返回对话链中的所有评论
	IsEnd         bool                   `protobuf:"varint,2,opt,name=isEnd,proto3" json:"isEnd,omitempty"`    // 是否已加载完
	Cursor        int64                  `protobuf:"varint,3,opt,name=cursor,proto3" json:"cursor,omitempty"`  // 下一页游标
	ReplyId       int64                  `protobuf:"varint,4,opt,name=replyId,proto3" json:"replyId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplyThreadResponse) Reset() {
	*x = GetReplyThreadResponse{}
	mi := &file_reply_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplyThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplyThreadResponse) ProtoMessage() {}

func (x *GetReplyThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplyThreadResponse.ProtoReflect.Descriptor instead.
func (*GetReplyThreadResponse) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{8}
}

func (x *GetReplyThreadResponse) GetReplies() []*ReplyItem {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *GetReplyThreadResponse) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *GetReplyThreadResponse) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *GetReplyThreadResponse) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

var File_reply_proto protoreflect.FileDescriptor

const file_reply_proto_rawDesc = "" +
	"\n" +
	"\vreply.proto\x12\aservice\"\xd2\x01\n" +
	"\x13ReplyPublishRequest\x12 \n" +
	"\vreplyUserId\x18\x01 \x01(\x03R\vreplyUserId\x12\x1a\n" +
	"\btargetId\x18\x02 \x01(\x03R\btargetId\x12\x1b\n" +
	"\tparent_id\x18\x03 \x01(\x03R\bparentId\x12 \n" +
	"\vrootReplyId\x18\x04 \x01(\x03R\vrootReplyId\x12$\n" +
	"\rbeReplyUserId\x18\x05 \x01(\x03R\rbeReplyUserId\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\"0\n" +
	"\x14ReplyPublishResponse\x12\x18\n" +
	"\areplyId\x18\x01 \x01(\x03R\areplyId\"\x88\x01\n" +
	"\x12ReplyDeleteRequest\x12 \n" +
	"\vreplyUserId\x18\x01 \x01(\x03R\vreplyUserId\x12\x1a\n" +
	"\btargetId\x18\x02 \x01(\x03R\btargetId\x12\x1a\n" +
	"\bparentId\x18\x03 \x01(\x03R\bparentId\x12\x18\n" +
	"\areplyId\x18\x04 \x01(\x03R\areplyId\"\x15\n" +
	"\x13ReplyDeleteResponse\"\xb3\x01\n" +
	"\x0eRepliesRequest\x12\x1a\n" +
	"\btargetId\x18\x01 \x01(\x03R\btargetId\x12\x1b\n" +
	"\tparent_id\x18\x02 \x01(\x03R\bparentId\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\x03R\x06cursor\x12\x1a\n" +
	"\bpageSize\x18\x04 \x01(\x03R\bpageSize\x12\x1a\n" +
	"\bsortType\x18\x05 \x01(\x05R\bsortType\x12\x18\n" +
	"\areplyId\x18\x06 \x01(\x03R\areplyId\"\xd8\x01\n" +
	"\tReplyItem\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x03R\x02Id\x12 \n" +
	"\vreplyUserId\x18\x02 \x01(\x03R\vreplyUserId\x12$\n" +
	"\rbeReplyUserId\x18\x03 \x01(\x03R\rbeReplyUserId\x12\x1b\n" +
	"\tparent_id\x18\x04 \x01(\x03R\bparentId\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x1c\n" +
	"\tlikeCount\x18\x06 \x01(\x03R\tlikeCount\x12\x1e\n" +
	"\n" +
	"createTime\x18\a \x01(\x03R\n" +
	"createTime\"\x87\x01\n" +
	"\x0fRepliesResponse\x12,\n" +
	"\areplies\x18\x01 \x03(\v2\x12.service.ReplyItemR\areplies\x12\x14\n" +
	"\x05isEnd\x18\x02 \x01(\bR\x05isEnd\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\x03R\x06cursor\x12\x18\n" +
	"\areplyId\x18\x04 \x01(\x03R\areplyId\"\x9d\x01\n" +
	"\x15GetReplyThreadRequest\x12\x14\n" +
	"\x05bizId\x18\x01 \x01(\tR\x05bizId\x12 \n" +
	"\vrootReplyId\x18\x02 \x01(\x03R\vrootReplyId\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\x03R\x06cursor\x12\x1a\n" +
	"\bpageSize\x18\x04 \x01(\x03R\bpageSize\x12\x18\n" +
	"\areplyId\x18\x05 \x01(\x03R\areplyId\"\x8e\x01\n" +
	"\x16GetReplyThreadResponse\x12,\n" +
	"\areplies\x18\x01 \x03(\v2\x12.service.ReplyItemR\areplies\x12\x14\n" +
	"\x05isEnd\x18\x02 \x01(\bR\x05isEnd\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\x03R\x06cursor\x12\x18\n" +
	"\areplyId\x18\x04 \x01(\x03R\areplyId2\xaf\x02\n" +
	"\x05Reply\x12K\n" +
	"\fReplyPublish\x12\x1c.service.ReplyPublishRequest\x1a\x1d.service.ReplyPublishResponse\x12H\n" +
	"\vReplyDelete\x12\x1b.service.ReplyDeleteRequest\x1a\x1c.service.ReplyDeleteResponse\x12<\n" +
	"\aReplies\x12\x17.service.RepliesRequest\x1a\x18.service.RepliesResponse\x12Q\n" +
	"\x0eGetReplyThread\x12\x1e.service.GetReplyThreadRequest\x1a\x1f.service.GetReplyThreadResponseB\vZ\t./serviceb\x06proto3"

var (
	file_reply_proto_rawDescOnce sync.Once
	file_reply_proto_rawDescData []byte
)

func file_reply_proto_rawDescGZIP() []byte {
	file_reply_proto_rawDescOnce.Do(func() {
		file_reply_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_reply_proto_rawDesc), len(file_reply_proto_rawDesc)))
	})
	return file_reply_proto_rawDescData
}

var file_reply_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_reply_proto_goTypes = []any{
	(*ReplyPublishRequest)(nil),    // 0: service.ReplyPublishRequest
	(*ReplyPublishResponse)(nil),   // 1: service.ReplyPublishResponse
	(*ReplyDeleteRequest)(nil),     // 2: service.ReplyDeleteRequest
	(*ReplyDeleteResponse)(nil),    // 3: service.ReplyDeleteResponse
	(*RepliesRequest)(nil),         // 4: service.RepliesRequest
	(*ReplyItem)(nil),              // 5: service.ReplyItem
	(*RepliesResponse)(nil),        // 6: service.RepliesResponse
	(*GetReplyThreadRequest)(nil),  // 7: service.GetReplyThreadRequest
	(*GetReplyThreadResponse)(nil), // 8: service.GetReplyThreadResponse
}
var file_reply_proto_depIdxs = []int32{
	5, // 0: service.RepliesResponse.replies:type_name -> service.ReplyItem
	5, // 1: service.GetReplyThreadResponse.replies:type_name -> service.ReplyItem
	0, // 2: service.Reply.ReplyPublish:input_type -> service.ReplyPublishRequest
	2, // 3: service.Reply.ReplyDelete:input_type -> service.ReplyDeleteRequest
	4, // 4: service.Reply.Replies:input_type -> service.RepliesRequest
	7, // 5: service.Reply.GetReplyThread:input_type -> service.GetReplyThreadRequest
	1, // 6: service.Reply.ReplyPublish:output_type -> service.ReplyPublishResponse
	3, // 7: service.Reply.ReplyDelete:output_type -> service.ReplyDeleteResponse
	6, // 8: service.Reply.Replies:output_type -> service.RepliesResponse
	8, // 9: service.Reply.GetReplyThread:output_type -> service.GetReplyThreadResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_reply_proto_init() }
func file_reply_proto_init() {
	if File_reply_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_reply_proto_rawDesc), len(file_reply_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reply_proto_goTypes,
		DependencyIndexes: file_reply_proto_depIdxs,
		MessageInfos:      file_reply_proto_msgTypes,
	}.Build()
	File_reply_proto = out.File
	file_reply_proto_goTypes = nil
	file_reply_proto_depIdxs = nil
}
